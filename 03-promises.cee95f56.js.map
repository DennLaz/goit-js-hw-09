{"mappings":"gfAAA,IAOIA,EACAC,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaH,EAAOE,cAAc,kBAClCE,EAAYJ,EAAOE,cAAc,iBACjCG,EAAcL,EAAOE,cAAc,mBAuBzCF,EAAOM,iBAAiB,UAExB,SAAuBC,qBAQnBC,YAAW,WA1BN,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CACNI,SAAUnB,EACVoB,MAAOnB,IAGTe,EAAO,CACLG,SAAUnB,EACVoB,MAAOnB,OAkBNoB,MAAK,SAAAC,OAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBD,EAAWI,EAAI,EACfH,GAASnB,GAAmBC,GAAkBA,EAC9CC,EAAAqB,OAAOC,QAAS,uBAAuCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAE9DO,OAAM,SAAAL,OAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBD,EAAWI,EAAI,EACfH,GAASnB,GAAmBC,GAAkBA,EAC9CC,EAAAqB,OAAOI,QAAS,sBAAoCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,YAE7DnB,IAnBLW,EAAEiB,iBAEF3B,EAAiBO,EAAUqB,cAC3B9B,EAAmBU,EAAYoB,cAC/B7B,EAAkBO,EAAWsB,cAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAkB+B,GAAK,EAACC,EAAAD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst inputDelay = formEl.querySelector('[name=\"delay\"]');\nconst inputStep = formEl.querySelector('[name=\"step\"]');\nconst inputAmount = formEl.querySelector('[name=\"amount\"]');\n\nlet inputAmountValue;\nlet inputDelayValue;\nlet inputStepValue;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({\n        position: inputAmountValue,\n        delay: inputDelayValue,\n      });\n    } else {\n      reject({\n        position: inputAmountValue,\n        delay: inputDelayValue,\n      });\n    }\n  });\n}\n\nformEl.addEventListener('submit', onFormSubmite);\n\nfunction onFormSubmite(e) {\n  e.preventDefault();\n\n  inputStepValue = inputStep.valueAsNumber;\n  inputAmountValue = inputAmount.valueAsNumber;\n  inputDelayValue = inputDelay.valueAsNumber;\n\n  for (let i = 0; i < inputAmountValue; i += 1) {\n    setTimeout(() => {\n      createPromise(inputAmountValue, inputDelayValue)\n        .then(({ position, delay }) => {\n          position = i + 1;\n          delay = (inputDelayValue += inputStepValue) - inputStepValue;\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          position = i + 1;\n          delay = (inputDelayValue += inputStepValue) - inputStepValue;\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, inputDelayValue);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$inputAmountValue","$ce04d3a99e08e73b$var$inputDelayValue","$ce04d3a99e08e73b$var$inputStepValue","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","e","setTimeout","Promise","resolve","reject","Math","random","position","delay","then","param","i","Notify","success","concat","catch","failure","preventDefault","valueAsNumber","i1","_loop"],"version":3,"file":"03-promises.cee95f56.js.map"}