{"mappings":"gfAAA,IAOIA,EACAC,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaH,EAAOE,cAAc,kBAClCE,EAAYJ,EAAOE,cAAc,iBACjCG,EAAcL,EAAOE,cAAc,mBAMzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CACNH,SAAAA,EACAC,MAAAA,IAGFG,EAAO,CACLJ,SAAAA,EACAC,MAAAA,MAGHA,MAIPR,EAAOgB,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAEFrB,EAAiBO,EAAUe,cAC3BxB,EAAmBU,EAAYc,cAC/BvB,EAAkBO,EAAWgB,cAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAkByB,GAAK,EACzCd,EAAcc,EAAI,EAAGxB,EAAkBwB,EAAIvB,GACxCwB,MAAK,SAAAC,OAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBV,EAAAyB,OAAOC,QAAS,uBAAuCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,UAE9DkB,OAAM,SAAAJ,OAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBV,EAAAyB,OAAOI,QAAS,sBAAoCF,OAAflB,EAAS,QAAYkB,OAANjB,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst inputDelay = formEl.querySelector('[name=\"delay\"]');\nconst inputStep = formEl.querySelector('[name=\"step\"]');\nconst inputAmount = formEl.querySelector('[name=\"amount\"]');\n\nlet inputAmountValue;\nlet inputDelayValue;\nlet inputStepValue;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onFormSubmite);\n\nfunction onFormSubmite(e) {\n  e.preventDefault();\n\n  inputStepValue = inputStep.valueAsNumber;\n  inputAmountValue = inputAmount.valueAsNumber;\n  inputDelayValue = inputDelay.valueAsNumber;\n\n  for (let i = 0; i < inputAmountValue; i += 1) {\n    createPromise(i + 1, inputDelayValue + i * inputStepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$inputAmountValue","$ce04d3a99e08e73b$var$inputDelayValue","$ce04d3a99e08e73b$var$inputStepValue","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","valueAsNumber","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2ff14c39.js.map"}