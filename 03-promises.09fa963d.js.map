{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAaH,EAAOE,cAAc,kBAClCE,EAAYJ,EAAOE,cAAc,iBACjCG,EAAcL,EAAOE,cAAc,mBAEzC,IAAII,EACAC,EACAC,EAmBJR,EAAOS,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAEFH,EAAiBJ,EAAUQ,cAC3BN,EAAmBD,EAAYO,cAC/BL,EAAkBJ,EAAWS,cAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAkBO,GAAK,EACzCC,YAAW,KA1BN,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,CACNI,SAAUd,EACVe,MAAOd,IAGTU,EAAO,CACLG,SAAUd,EACVe,MAAOd,OAkBNe,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBD,EAAWP,EAAI,EACfQ,GAASd,GAAmBC,GAAkBA,EAC9CV,EAAAyB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,UAEtDI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBD,EAAWP,EAAI,EACfQ,GAASd,GAAmBC,GAAkBA,EAC9CV,EAAAyB,OAAOG,QAAQ,sBAAoBN,QAAeC,YAErDd","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst inputDelay = formEl.querySelector('[name=\"delay\"]');\nconst inputStep = formEl.querySelector('[name=\"step\"]');\nconst inputAmount = formEl.querySelector('[name=\"amount\"]');\n\nlet inputAmountValue;\nlet inputDelayValue;\nlet inputStepValue;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({\n        position: inputAmountValue,\n        delay: inputDelayValue,\n      });\n    } else {\n      reject({\n        position: inputAmountValue,\n        delay: inputDelayValue,\n      });\n    }\n  });\n}\n\nformEl.addEventListener('submit', onFormSubmite);\n\nfunction onFormSubmite(e) {\n  e.preventDefault();\n\n  inputStepValue = inputStep.valueAsNumber;\n  inputAmountValue = inputAmount.valueAsNumber;\n  inputDelayValue = inputDelay.valueAsNumber;\n\n  for (let i = 0; i < inputAmountValue; i += 1) {\n    setTimeout(() => {\n      createPromise(inputAmountValue, inputDelayValue)\n        .then(({ position, delay }) => {\n          position = i + 1;\n          delay = (inputDelayValue += inputStepValue) - inputStepValue;\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          position = i + 1;\n          delay = (inputDelayValue += inputStepValue) - inputStepValue;\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, inputDelayValue);\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$inputAmountValue","$47d4ff9957288465$var$inputDelayValue","$47d4ff9957288465$var$inputStepValue","addEventListener","e","preventDefault","valueAsNumber","i","setTimeout","Promise","resolve","reject","Math","random","position","delay","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.09fa963d.js.map"}